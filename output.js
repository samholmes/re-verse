function createScope(i){var e={},t=function(n,r){if(r){var s=new Thing(n,r.items,r.keys);return s.signature=r.signature,s.body=r.body,s.definitionScope=t,e[n]=s}var r;return r=e[n],r||(r="function"==typeof i?i(n):new Thing(n,[],{})),r};return t}function Thing(i,e,t){Array.isArray(i)||(i=[i]);var n=i[i.length-1];this.items=e||[],this.keys=t||{},this.identifiers=i,this.identifier=n}function destructure(i,e,t){i.identifiers.forEach(function(n,r){if(e.keys[n])var s=e.keys[n];else if(e.items[r])var s=e.items[r];else if(i.keys[n])var s=i.keys[n];else if(n===i.identifier)var s=i.items[0];var o=new Thing(n,[s]);t(n,o)})}function error(i){throw new Error("Runtime Error: "+i)}var scope=createScope();Thing.prototype.is=function(i,e){return e(this.identifier,i)},Thing.prototype.and=function(i){var e=new Thing([this.identifier,i.identifier]);return e.items=this.items.concat(i.items),e.keys=Object.assign(this.keys,i.keys),e},Thing.prototype.as=function(i){var e=new Thing(this.identifier);return e.keys[i.identifier]=this,e},Thing.prototype["in"]=function(i){if(this.identifier)var e=i.keys[this.identifier];else if("number"==typeof this.items[0])var e=new Thing(null,[i.items[this.items[0]]]);else var e=new Thing(null,[]);return e},Thing.prototype.to=function(i){if("function"==typeof i.body){inputThing=this;var e=createScope(i.definitionScope);if("function"==typeof i.signature){var t=i.signature(i.definitionScope);t&&destructure(t,inputThing,e)}return e("input",inputThing),i.body(e)}error(i.identifier+" is not a function.")},Thing.prototype.lambda=function(i,e){return this.signature=i,this.body=e,this};
// END OF RUNTIME

!function(n){function t(n,t){return new Thing(null).lambda(n,t)}function u(n){var u=(n.toString().match(/\((.+?)\)/)||[])[1],i=u?u.split(/\s*,\s*/):[],r=o(i),c=function(t){var u=[];return i.forEach(function(n){u.push(t(n).items[0])}),n.apply(this,u)};return t(r,c)}function o(n){return function(t){return n.reduce(function(n,u){return n=n?n.and(t(u)):new Thing(u)},null)}}n("log",t(null,function(n){console.log(n("input"))})),n("print",u(function(n){console.log(n)}))}(scope);
// END OF NATIVE

(new Thing(null, ["Hello world"],{})).to(scope("print"));
